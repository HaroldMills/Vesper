# Generated by Django 5.1.3 on 2024-12-03 18:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('latitude', models.FloatField(null=True)),
                ('longitude', models.FloatField(null=True)),
                ('elevation', models.FloatField(null=True)),
                ('time_zone', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'vesper_station',
            },
        ),
        migrations.CreateModel(
            name='AnnotationConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('text', models.TextField(blank=True)),
                ('creation_time', models.DateTimeField()),
                ('creating_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='annotation_constraints', related_query_name='annotation_constraint', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'vesper_annotation_constraint',
            },
        ),
        migrations.CreateModel(
            name='DeviceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(max_length=255)),
                ('manufacturer', models.CharField(max_length=255)),
                ('model', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'vesper_device_model',
                'unique_together': {('manufacturer', 'model')},
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('serial_number', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', related_query_name='device', to='vesper.devicemodel')),
            ],
            options={
                'db_table': 'vesper_device',
                'unique_together': {('model', 'serial_number')},
            },
        ),
        migrations.CreateModel(
            name='DeviceModelInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local_name', models.CharField(max_length=255)),
                ('channel_num', models.IntegerField()),
                ('description', models.TextField(blank=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inputs', related_query_name='input', to='vesper.devicemodel')),
            ],
            options={
                'db_table': 'vesper_device_model_input',
                'unique_together': {('model', 'channel_num'), ('model', 'local_name')},
            },
        ),
        migrations.CreateModel(
            name='DeviceInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inputs', related_query_name='input', to='vesper.device')),
                ('model_input', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_inputs', related_query_name='device_input', to='vesper.devicemodelinput')),
            ],
            options={
                'db_table': 'vesper_device_input',
                'unique_together': {('device', 'model_input')},
            },
        ),
        migrations.CreateModel(
            name='DeviceModelOutput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local_name', models.CharField(max_length=255)),
                ('channel_num', models.IntegerField()),
                ('description', models.TextField(blank=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outputs', related_query_name='output', to='vesper.devicemodel')),
            ],
            options={
                'db_table': 'vesper_device_model_output',
                'unique_together': {('model', 'channel_num'), ('model', 'local_name')},
            },
        ),
        migrations.CreateModel(
            name='DeviceOutput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outputs', related_query_name='output', to='vesper.device')),
                ('model_output', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_outputs', related_query_name='device_output', to='vesper.devicemodeloutput')),
            ],
            options={
                'db_table': 'vesper_device_output',
                'unique_together': {('device', 'model_output')},
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.TextField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=255)),
                ('creation_time', models.DateTimeField()),
                ('creating_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobs', related_query_name='job', to='vesper.job')),
                ('creating_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobs', related_query_name='job', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'vesper_job',
            },
        ),
        migrations.CreateModel(
            name='AnnotationInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('String', 'String')], max_length=255)),
                ('creation_time', models.DateTimeField()),
                ('constraint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='annotation_infos', related_query_name='annotation_info', to='vesper.annotationconstraint')),
                ('creating_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='annotation_infos', related_query_name='annotation_info', to=settings.AUTH_USER_MODEL)),
                ('creating_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='annotation_infos', related_query_name='annotation_info', to='vesper.job')),
            ],
            options={
                'db_table': 'vesper_annotation_info',
            },
        ),
        migrations.AddField(
            model_name='annotationconstraint',
            name='creating_job',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='annotation_constraints', related_query_name='annotation_constraint', to='vesper.job'),
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'vesper_processor',
                'unique_together': {('name', 'type')},
            },
        ),
        migrations.AddField(
            model_name='job',
            name='processor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobs', related_query_name='job', to='vesper.processor'),
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_channels', models.IntegerField()),
                ('length', models.BigIntegerField()),
                ('sample_rate', models.FloatField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('creation_time', models.DateTimeField()),
                ('creating_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recordings', related_query_name='recording', to='vesper.job')),
                ('recorder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordings', related_query_name='recording', to='vesper.device')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordings', related_query_name='recording', to='vesper.station')),
            ],
            options={
                'db_table': 'vesper_recording',
                'unique_together': {('station', 'recorder', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='RecordingChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_num', models.IntegerField()),
                ('recorder_channel_num', models.IntegerField()),
                ('mic_output', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recording_channels', related_query_name='recording_channel', to='vesper.deviceoutput')),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', related_query_name='channel', to='vesper.recording')),
            ],
            options={
                'db_table': 'vesper_recording_channel',
                'unique_together': {('recording', 'channel_num')},
            },
        ),
        migrations.CreateModel(
            name='Clip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_index', models.BigIntegerField(blank=True, null=True)),
                ('length', models.BigIntegerField()),
                ('sample_rate', models.FloatField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('date', models.DateField()),
                ('creation_time', models.DateTimeField()),
                ('creating_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clips', related_query_name='clip', to=settings.AUTH_USER_MODEL)),
                ('mic_output', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clips', related_query_name='clip', to='vesper.deviceoutput')),
                ('creating_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clips', related_query_name='clip', to='vesper.job')),
                ('creating_processor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clips', related_query_name='clip', to='vesper.processor')),
                ('recording_channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clips', related_query_name='clip', to='vesper.recordingchannel')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clips', related_query_name='clip', to='vesper.station')),
            ],
            options={
                'db_table': 'vesper_clip',
            },
        ),
        migrations.CreateModel(
            name='StationDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_devices', related_query_name='station_device', to='vesper.device')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station_devices', related_query_name='station_device', to='vesper.station')),
            ],
            options={
                'db_table': 'vesper_station_device',
            },
        ),
        migrations.AddField(
            model_name='station',
            name='devices',
            field=models.ManyToManyField(through='vesper.StationDevice', to='vesper.device'),
        ),
        migrations.CreateModel(
            name='StringAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('creation_time', models.DateTimeField()),
                ('clip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='string_annotations', related_query_name='string_annotation', to='vesper.clip')),
                ('creating_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='string_annotations', related_query_name='string_annotation', to='vesper.job')),
                ('creating_processor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='string_annotations', related_query_name='string_annotations', to='vesper.processor')),
                ('creating_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='string_annotations', related_query_name='string_annotation', to=settings.AUTH_USER_MODEL)),
                ('info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='string_annotations', related_query_name='string_annotation', to='vesper.annotationinfo')),
            ],
            options={
                'db_table': 'vesper_string_annotation',
            },
        ),
        migrations.CreateModel(
            name='StringAnnotationEdit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('S', 'Set'), ('D', 'Delete')], max_length=1)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('creation_time', models.DateTimeField()),
                ('clip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='string_annotation_edits', related_query_name='string_annotation_edit', to='vesper.clip')),
                ('creating_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='string_annotation_edits', related_query_name='string_annotation_edit', to='vesper.job')),
                ('creating_processor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='string_annotation_edits', related_query_name='string_annotation_edits', to='vesper.processor')),
                ('creating_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='string_annotation_edits', related_query_name='string_annotation_edit', to=settings.AUTH_USER_MODEL)),
                ('info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='string_annotation_edits', related_query_name='string_annotation_edit', to='vesper.annotationinfo')),
            ],
            options={
                'db_table': 'vesper_string_annotation_edit',
            },
        ),
        migrations.CreateModel(
            name='TagInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('creation_time', models.DateTimeField()),
                ('creating_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_infos', related_query_name='tag_info', to='vesper.job')),
                ('creating_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_infos', related_query_name='tag_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'vesper_tag_info',
            },
        ),
        migrations.CreateModel(
            name='TagEdit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('S', 'Set'), ('D', 'Delete')], max_length=1)),
                ('creation_time', models.DateTimeField()),
                ('clip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_edits', related_query_name='tag_edit', to='vesper.clip')),
                ('creating_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_edits', related_query_name='tag_edit', to='vesper.job')),
                ('creating_processor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_edits', related_query_name='tag_edits', to='vesper.processor')),
                ('creating_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_edits', related_query_name='tag_edit', to=settings.AUTH_USER_MODEL)),
                ('info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_edits', related_query_name='tag_edit', to='vesper.taginfo')),
            ],
            options={
                'db_table': 'vesper_tag_edit',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField()),
                ('clip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', related_query_name='tag', to='vesper.clip')),
                ('creating_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tags', related_query_name='tag', to='vesper.job')),
                ('creating_processor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tags', related_query_name='tags', to='vesper.processor')),
                ('creating_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tags', related_query_name='tag', to=settings.AUTH_USER_MODEL)),
                ('info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', related_query_name='tag', to='vesper.taginfo')),
            ],
            options={
                'db_table': 'vesper_tag',
            },
        ),
        migrations.CreateModel(
            name='DeviceConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('input', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', related_query_name='connection', to='vesper.deviceinput')),
                ('output', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', related_query_name='connection', to='vesper.deviceoutput')),
            ],
            options={
                'db_table': 'vesper_device_connection',
                'unique_together': {('output', 'input', 'start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='RecordingFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_num', models.IntegerField()),
                ('start_index', models.BigIntegerField()),
                ('length', models.BigIntegerField()),
                ('path', models.CharField(max_length=255, null=True, unique=True)),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', related_query_name='file', to='vesper.recording')),
            ],
            options={
                'db_table': 'vesper_recording_file',
                'unique_together': {('recording', 'file_num')},
            },
        ),
        migrations.AddIndex(
            model_name='clip',
            index=models.Index(fields=['station', 'mic_output', 'date', 'creating_processor'], name='vesper_clip_station_50dee1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='clip',
            unique_together={('recording_channel', 'start_time', 'creating_processor')},
        ),
        migrations.AlterUniqueTogether(
            name='stationdevice',
            unique_together={('station', 'device', 'start_time', 'end_time')},
        ),
        migrations.AlterUniqueTogether(
            name='stringannotation',
            unique_together={('clip', 'info')},
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('clip', 'info')},
        ),
    ]
